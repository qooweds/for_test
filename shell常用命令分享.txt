0.分享的初衷是为了让linux接触得比较少的同学能够熟悉这个系统，可以在上面进行日常的工作
由于都是个人的经验之谈，可能会有一些错误的地方，希望大家能指出

1.第一次进入小黑窗口，不论是同事给一组 ip和用户名密码，一般都是在home目录下
#第一次进入Linux会用到的命令
2.使用这些命令会用到
#Linux目录结构和文件
3.然后我输了一下ls，发现有的文件执行不了 有人告诉我ll 但是我也不知道都是什么意思



（1.常用操作）
不论是同事给一组 ip和用户名密码
还是自己有mac 通过终端进入

1.1.掌握基础操作命令 ls, mv, cp, rm, touch, mkdir等命令，以及pwd 

1.2寻找帮助man(1为命令，2为系统调用，3为库函数库函数替代可以用--help)
掌握基本目录结构 . .. ~ / 以及常用目录结构
(以上3点一起讲，大概3-5min)

1.3修改配置 
修改vim配置
/usr/share/vim/vimrc
~/.vimrc
修改环境变量bash_profile
1.4

2.权限
3.小tips

二.看日志
三.处理日志
四.任务自动化
五.和windows的交互 rz/sz  xshell 以及大杀器mount（由于换行符不一致，注意存储的文件格式为unix-like） sudo mount -t cifs //192.168.0.103/Users/linux_mount /home/lic/server/mount -o username=lic,password=read_passwd

（最喜欢的5个命令或者操作 CTRL+R crontab xshell复制粘贴，sz/rz grep，如果大家也有自己喜欢的命令可以分享下）
==============================================================

0.分享前告知大家如果能边在终端操作边听,可能会对讲的命令印象更深刻一些,如果大家方便的话可以带上电脑
1.先表示自己不过是初级水平,分享这些一来是希望能帮大家节约些时间;
    二来是如果大家在讲的时候有什么需求,我没有用到,可能会现场搜索,帮大家解决这个需求
10.重点在文档搜索grep find awk (每一个命令都特别仔细的讲),然后再是sed,vim这些可能会用到的命令,最后再说一些常用命令,
    最后介绍linux操作系统以及一些平时用不太到的知识例如crontab
11. 介绍一下管道的基本原理
	介绍下Linux目录结构和文件，以及Linux万物皆文件的实现（/proc）

		Enter    向下n行，需要定义。默认为1行
		Ctrl+F   向下滚动一屏
		空格键  向下滚动一屏
		Ctrl+B  返回上一屏
		=       输出当前行的行号
		：f     输出文件名和当前行的行号
		V      调用vi编辑器
		!命令   调用Shell，并执行命令 
		q       退出more
====================================================================================================
计划:
(可以先考虑说下linux目录,万物皆文件,例如/proc 其实只存在内存中;内有很多文件可供我们测试用 参考http://blog.csdn.net/zdwzzu2006/article/details/7747977)
然后从root新建一个账户 adduser
直接就到了test账户 新用户
ls cd(cd -) pwd C-r history

(20min)第一部分:实用命令介绍,例如find base64 tr等等(可以考虑从tr转进到sed部分)
(5min)第二部分,vim(不细说,介绍常用的即可,因为一般用得少) awk sed介绍
(5min)第三部分,脚本介绍
其他:参考linux变成及网上找一点shell编程书籍

====================================================================================================
本月分享：
shell常用命令：
1.回顾shell命令和技巧，包括正则表达式；base64 file等小命令啊；shell操作安全（例如删除前要先ls以及备份,使用非root账号进行日常操作等）
. / ~ 的区别 ls -lrt mv cp sudo su -
find grep的使用
vim的基本使用 页首页尾 行首行尾 逐单词跳过(词头词尾) 查找 替换 (除此之外,还有文件内跳转等等)
从tr到sed
awk的使用,awk语法的三个部分 例如:grep过滤一个表格里面所有带某string的数据行,然后将结果用awk进行输出,最后用sed或者shell进行操作;或者有多少个相同的字段
sort 例如sort之后 -k2nr 对结果进行排序
tail/head more/less的使用
chmod
crontab
mysql操作
top
ps
netstat
管道(管道是什么?进程间通信的多种方式)

简单介绍:
rsync
wget
tar
ssh
mail
curl  http://tieba.baidu.com/p/2730643937
expect?
tcpdump(dump the traffic on a network) http://www.cnblogs.com/ggjucheng/archive/2012/01/14/2322659.html

2.完全熟悉markdown语法
3.自己希望熟悉的shell部分
软连接硬链接
?shell脚本,shell中的小括号,中括号,大括号
基本四则运算(let c=$a+$b 建议还是用python)


====================================================================================================
vim部分
参考http://coolshell.cn/articles/5426.html
u → undo
<C-r> → redo

举例:(貌似有点太麻烦,选些简单有用的例子)
1.处理这一串字符串
  echo "{\"defaultValue\":\"vaR$i\",\"description\":\"\",\"disabled\":false,\"fileSingleSizeLimit\":0,\"label\":\"vaR$i\",\"limits\":[],\"mandatory\":false,\"maxLength\":128,\"name\":\"vaR$i\",\"options\":null,\"order\":$i,\"rules\":\"\",\"type\":\"HIDDEN_TYPE\"},"
循环1-100

2.awk
讲awk之前可以讲grep wc -l sort head sed/tr
通常，在不指名-F域分隔符的情况下，默认的域分隔符是空格;输出的默认分隔符是空格,当然可以使用自己需要的分隔符
处理json
先将json的反括号转换为换行
sed -i "s/}/\n/g" tmp
然后搜索某关键字
cat tmp |awk -F ',' '{print $5}' |grep -n 82 |head
(小技巧,xshell功能)如果需要搜索的关键字高亮,再grep一次即可
可以同时使用多种分隔符 awk -F ',|:'
(回去看正则表达式)如果要比较awk中引号括起来的数字,需要用正则去掉引号,再做比较